name: Release Build
on:
  workflow_run:
    workflows: ["Run Test"]
    types: 
    - completed
  push:
    branches:
    - master

jobs:
  docker:
    name: Build And Publish Docker Image
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    needs: auto-tag
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        # list of Docker images to use as base name for tags
        images: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
        # generate Docker tags based on the following events/attributes
        tags: |
          type=ref, event=tag
          type=ref, event=branch
          type=ref, event=pr
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  auto-tag:
    runs-on: ubuntu-latest
    # https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
    # https://docs.github.com/en/actions/learn-github-actions/expressions
    if: ${{ github.ref == 'refs/heads/master' }} && ${{ github.event.workflow_run.conclusion == 'success' }}
    env:
      COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
      with:
        fetch-depth: "0"
    - run: |
        git config --global user.name "Github Action Bot"
        git config --global user.email "jacexh@users.noreply.github.com"
        type=patch
        pattern="^Merge pull request #[0-9]+ from jacexh/release.*"
        echo "commit message: $COMMIT_MESSAGE"
        if [[ $COMMIT_MESSAGE =~ $pattern ]]; then
          echo "bump up minor version number"
          type=minor
        fi
        ./scripts/auto_bump_version.sh $type
        git push origin master --follow-tags